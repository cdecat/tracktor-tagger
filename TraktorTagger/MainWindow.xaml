<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:TraktorTagger" 
        x:Class="TraktorTagger.MainWindow"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        Title="{Binding WindowTitle}" Height="600" Width="800" WindowState="Maximized" Icon="Images/TraktorTaggerIcon.png" DataContextChanged="Window_DataContextChanged_1">


    <Window.Resources>


        
        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <local:FileSizeConverter x:Key="fileSizeConverter" />


        <ObjectDataProvider x:Key="KeyEnumValueList" MethodName="GetKeyEnumValues" ObjectType="{x:Type local:KeyEnumList}" />

        <local:KeyEnumConverter x:Key="KeyEnumConverter" />


    </Window.Resources>




    <Grid>


        <Grid.RowDefinitions>
            <RowDefinition Height="23" />
            <RowDefinition Height="*"  MinHeight="150"/>
            <RowDefinition  Height="3"/>
            <RowDefinition Height="*" MinHeight="150"/>
        </Grid.RowDefinitions>


        <Menu Height="23" VerticalAlignment="Top" Grid.Row="0" Grid.ColumnSpan="2">
            <MenuItem Header="File">
                <MenuItem Header="Open Traktor Collection" Command="{Binding OpenCollectionCommand}"/>
                <MenuItem Header="Save Traktor Collection" Command="{Binding SaveCollectionCommand}"/>

            </MenuItem>

            <MenuItem Header="Columns">

                <MenuItem Header="Traktor Collection">

                    <MenuItem Header="Track">
                        <MenuItem Header="Title" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackTitleColumn,Mode=TwoWay}" />
                        <MenuItem Header="Mix" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackMixColumn,Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Artist" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackArtistColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Remixer" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackRemixerColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Producer" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackProducerColumn,Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Release" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackReleaseColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Released" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackReleasedColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Label" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackLabelColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Catalog Number" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackCatalogNoColumn,Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Genre" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackGenreColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Key" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackKeyColumn,Mode=TwoWay}"/>
                        <MenuItem Header="BPM" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackBPMColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Rating" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackRatingColumn,Mode=TwoWay}"/>
                    </MenuItem>

                    <MenuItem Header="Catalog">
                        <MenuItem Header="Imported" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackImportedColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Modified" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackModifiedColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Last Played" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackLastPlayedColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Play Count" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackPlayCountColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Play Time" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackPlayTimeColumn,Mode=TwoWay}"/>
                    </MenuItem>

                    <MenuItem Header="File">
                        <MenuItem Header="File Name" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackFileNameColumn,Mode=TwoWay}"/>
                        <MenuItem Header="File Path" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackFilePathColumn,Mode=TwoWay}"/>
                        <MenuItem Header="File Size" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackFileSizeColumn,Mode=TwoWay}"/>
                        <MenuItem Header="Bit Rate" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackBitRateColumn,Mode=TwoWay}"/>
                    </MenuItem>


                    <MenuItem Header="Comments">
                        <MenuItem Header="Comment 1" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackComment1Column,Mode=TwoWay}"/>
                        <MenuItem Header="Comment 2" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackComment2Column,Mode=TwoWay}"/>
                        <MenuItem Header="Lyrics" IsCheckable="True" IsChecked="{Binding Path=ColumnSettings.ShowTrackLyricsColumn,Mode=TwoWay}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Reset to Default" Command="{Binding Path=ColumnSettings.ResetTrackColumnsCommand}" />


                </MenuItem>

                <MenuItem Header="Track Data Search">


                    <MenuItem Header="Title" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Mix" IsCheckable="True" IsChecked="True"/>
                    <Separator/>
                    <MenuItem Header="Artist" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Remixer" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Producer" IsCheckable="True" IsChecked="True"/>
                    <Separator/>
                    <MenuItem Header="Release" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Released" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Label" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Catalog Number" IsCheckable="True" IsChecked="True"/>
                    <Separator/>
                    <MenuItem Header="Genre" IsCheckable="True" IsChecked="True"/>
                    <MenuItem Header="Key" IsCheckable="True" IsChecked="True"/>
                    <Separator/>
                    <MenuItem Header="Reset to Default" />

                </MenuItem>



            </MenuItem>

            <MenuItem Header="Help">

                <MenuItem Header="Buy me a beer!" Command="{Binding DonateCommand}"/>
                <MenuItem Header="Help" Command="{Binding OpenHelpCommand}"/>
                <MenuItem Header="About" Command="{Binding AboutCommand}"/>




            </MenuItem>
        </Menu>




        <GroupBox Grid.Row="1" Header="Traktor Collection" Margin="7" VerticalAlignment="Stretch" Grid.ColumnSpan="2">
            <Grid>
                <DataGrid RowHeight="25" SelectedItem="{Binding SelectedTraktorTrack}" x:Name="traktorColDataGrid" Margin="10" CanUserResizeRows="False" AutoGenerateColumns="False" SelectionMode="Single" VerticalScrollBarVisibility="Visible" ItemsSource="{Binding TraktorTracks}"  >

                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkGray"/>
                    </DataGrid.Resources>

                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Search Track URL" Command="{Binding SearchTraktorTrackDataSourceCommand}"/>
                            <MenuItem Header="Browse to URL"  Command="{Binding BrowseToTraktorTrackUrlCommand}"/>
                            <MenuItem Header="Copy URL to Clipboard" Command="{Binding CopyTraktorTrackUrlCommand}" />
                            <MenuItem Header="Clear URL Comment" Command="{Binding ClearURLCommentCommand}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns>

                        <DataGridTemplateColumn Width="25" IsReadOnly="True" SortMemberPath="DataSourceHostName" CanUserResize="False">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Name="img"/>


                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding DataSourceHostName}" Value="www.beatport.com">
                                            <Setter TargetName="img" Property="Source" Value="Images/beatport_24.jpg"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding DataSourceHostName}" Value="www.discogs.com">
                                            <Setter TargetName="img" Property="Source" Value="Images/discogs_24.jpg"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>


                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>


                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width="150*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackTitleColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>
                        <DataGridTextColumn Header="Mix" Binding="{Binding Mix}" Width="125*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackMixColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Artist" Binding="{Binding Artist}" Width="125*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackArtistColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>
                        <DataGridTextColumn Header="Remixer" Binding="{Binding Remixer}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackRemixerColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="Producer" Binding="{Binding Producer}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackProducerColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="Release" Binding="{Binding Release}" Width="105" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackReleaseColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="Released" Binding="{Binding ReleaseDate, StringFormat={}\{0:d\}}" Width="75" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackReleasedColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Label" Binding="{Binding Label}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackLabelColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>
                        <DataGridTextColumn Header="Catalog #" Binding="{Binding CatalogNumber}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackCatalogNoColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Genre" Binding="{Binding Genre}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackGenreColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>




                        <DataGridComboBoxColumn Header="Key" Width="55" 
                                                CanUserResize="False"
                                                IsReadOnly="False" 
                                                SelectedValueBinding="{Binding Key}"
                                                SelectedValuePath="Key"
                                                DisplayMemberPath="Description"
                                                ItemsSource="{Binding Source={StaticResource KeyEnumValueList}}"
                                                Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackKeyColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"
                                                >
                        </DataGridComboBoxColumn>



                        <DataGridTextColumn Header="BPM" Binding="{Binding BPM}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackBPMColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Rating" Binding="{Binding Rating}" Width="100*" IsReadOnly="False" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackRatingColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>
                        <DataGridTextColumn Header="Imported" Binding="{Binding Imported,StringFormat={}\{0:d\}}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackImportedColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Modified" Binding="{Binding Modified,StringFormat={}\{0:d\}}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackModifiedColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="Last Played" Binding="{Binding LastPlayed,StringFormat={}\{0:d\}}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackLastPlayedColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Play Count" Binding="{Binding PlayCount}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackPlayCountColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="Play Time" Binding="{Binding PlayTime}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackPlayTimeColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="File Name" Binding="{Binding FileName}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackFileNameColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="File Path" Binding="{Binding FilePath}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackFilePathColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>


                        <DataGridTextColumn Header="File Size" Binding="{Binding FileSize,Converter={StaticResource fileSizeConverter}}" Width="60" CanUserResize="False" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackFileSizeColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>
                        <DataGridTextColumn Header="Bit Rate" Binding="{Binding BitRate}" Width="100*" IsReadOnly="True" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackBitRateColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Comment 1" Binding="{Binding Comment1}" Width="100*" IsReadOnly="false" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackComment1Column, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Comment 2" Binding="{Binding Comment2}" Width="100*" IsReadOnly="false" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackComment2Column, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>

                        <DataGridTextColumn Header="Lyrics" Binding="{Binding Lyrics}" Width="100*" IsReadOnly="false" Visibility="{Binding Path=(FrameworkElement.DataContext).ColumnSettings.ShowTrackLyricsColumn, RelativeSource={x:Static RelativeSource.Self}, Converter={StaticResource boolToVis}}"/>







                    </DataGrid.Columns>

                </DataGrid>

            </Grid>
        </GroupBox>

        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Grid.ColumnSpan="2" />

        <GroupBox Header="Track Data Search" Margin="7" Grid.Row="3" VerticalAlignment="Stretch" Grid.ColumnSpan="2">


            <Grid>
                <DataGrid SelectedItem="{Binding SelectedTrackData}" AutoGenerateColumns="False" Margin="10,38,10,36" x:Name="searchResultDataGrid" CanUserResizeRows="False" SelectionMode="Single" VerticalScrollBarVisibility="Visible" ItemsSource="{Binding TrackDataSearchResults}">

                    <DataGrid.ContextMenu>

                        <ContextMenu>
                            <MenuItem Header="Copy Url to Clipboard" Command="{Binding CopyTrackDataUrlCommand}" />
                            <MenuItem Header="Browse to Url"  Command="{Binding BrowseToTrackDataURLCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkGray"/>
                    </DataGrid.Resources>

                    <DataGrid.Columns>


                        <DataGridTemplateColumn Width="25" IsReadOnly="True" SortMemberPath="DataSourceName">


                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>


                                                    <CheckBox HorizontalAlignment="Center" Grid.Column="0" VerticalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagDataSource}" Margin="0" Padding="0" />

                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>



                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Name="img"/>


                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding DataSourceHost}" Value="www.beatport.com">
                                            <Setter TargetName="img" Property="Source" Value="Images/beatport_24.jpg"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding DataSourceHost}" Value="www.discogs.com">
                                            <Setter TargetName="img" Property="Source" Value="Images/discogs_24.jpg"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>


                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>


                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width="150*" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagTitle}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagTitle}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Title</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>

                        </DataGridTextColumn>



                        <DataGridTextColumn Header="Mix" Binding="{Binding Mix}" Width="125*" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagMix}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagMix}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Mix</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Artist" Binding="{Binding Artist}" Width="125*" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagArtist}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagArtist}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Artist</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Remixer" Binding="{Binding Remixer}" Width="100*" IsReadOnly="True">



                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagRemixer}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagRemixer}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Remixer</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>



                        </DataGridTextColumn>


                        <DataGridTextColumn Header="Producer" Binding="{Binding Producer}" Width="100*" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagProducer}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagProducer}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Producer</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>


                        <DataGridTextColumn Header="Release" Binding="{Binding Release}" Width="100*" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagRelease}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagRelease}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Release</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>



                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Released" Binding="{Binding ReleaseDate, StringFormat={}\{0:d\}}" Width="75" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagReleased}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagReleased}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Released</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Label" Binding="{Binding Label}" Width="100*" IsReadOnly="True">


                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagLabel}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagLabel}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Label</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Catalog #" Binding="{Binding CatalogNumber}" Width="100*" IsReadOnly="True">



                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagCatalogNo}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagCatalogNo}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Catalog #</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Genre" Binding="{Binding Genre}" Width="100*" IsReadOnly="True">


                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagGenre}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagGenre}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Genre</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>

                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Key" Binding="{Binding Key,Converter={StaticResource KeyEnumConverter}}" Width="55" IsReadOnly="True">

                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Style.Setters>
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" Width="75" VerticalAlignment="Stretch" Height="15">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="25"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.TagKey}" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.CanTagKey}" />
                                                        <Label Grid.Column="1" VerticalAlignment="Stretch" Padding="0" Margin="0">Key</Label>
                                                    </Grid>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>


                        </DataGridTextColumn>



                    </DataGrid.Columns>

                </DataGrid>
                <ComboBox Name="dataSourceCombo" Margin="0,10,10,0" VerticalAlignment="Top" SelectedIndex="0" HorizontalAlignment="Right" Width="128" ItemsSource="{Binding TrackDataSources}" DisplayMemberPath="Host" SelectedItem="{Binding SelectedDataSource}" />


                <Button Content="Search" Margin="0,10,143,0" VerticalAlignment="Top" x:Name="searchButton" Command="{Binding SearchTrackDataCommand}" HorizontalAlignment="Right" Width="75" RenderTransformOrigin="0.613,0.364"/>
                <Button x:Name="tagSelectedButton" Content="Tag Selected Track" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="117" Command="{Binding TagSelectedCommand}"/>
                <Button Content="Load More Results" Margin="0,0,10,5" Height="22" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="110" Command="{Binding LoadMoreResultsCommand}"/>
                <Label Content="{Binding SearchStatus}" HorizontalAlignment="Left" Margin="10,0,0,5" VerticalAlignment="Bottom"/>
                <TextBox Height="23" Margin="132,9,223,0" TextWrapping="Wrap" Text="{Binding TrackDataSearchText, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top">

                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding SearchTrackDataCommand}" Key="Enter" />
                    </TextBox.InputBindings>

                    <TextBox.Style>
                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>

                                        <Label Content=" Enter search query, track/release URL" Foreground="Gray" />

                                        <!--                    <Label Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=SelectedDataSource.SearchPrompt}" Foreground="LightGray" /> -->




                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>


                </TextBox>
            </Grid>

        </GroupBox>

    </Grid>
</Window>

    